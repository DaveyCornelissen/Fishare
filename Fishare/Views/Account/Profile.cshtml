@using Fishare.Cookies
@using Fishare.Model
@using Microsoft.AspNetCore.Mvc.Rendering
@model ProfileViewModel
@{
    ViewData["Title"] = "Profile";
}

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}

<link href="~/css/Profile/Profile.css" rel="stylesheet"/>
<div id="ProfilePage" class="container">
    <div class="Top-Content">
        <div class="row">
            <div class="col-md-8">
                <div class="UserImage">
                    @if (String.IsNullOrEmpty(Model.ProfileInfoViewModel.PPath))
                    {
                        <img src="~/images/Layout/user.png" class="UserPhoto"/>
                    }
                    else
                    {
                        <img src="~/images/Uploads/ProfileImages/@Model.ProfileInfoViewModel.PPath" class="UserPhoto rounded-circle border border-info"/>
                    }
                </div>
                <div class="row AccountInfoText">

                    <div class="col-md-5">
                        <h5>
                            <strong class="text-primary"><i class="fas fa-user"></i> Name:</strong> @Model.ProfileInfoViewModel.FirstName @Model.ProfileInfoViewModel.LastName
                        </h5>
                        <h5>
                            <strong class="text-primary"><i class="fas fa-book"></i> Bio:</strong> @Model.ProfileInfoViewModel.Bio
                        </h5>
                    </div>
                    <div class="col-md-3">
                        <h5>
                            <strong class="text-primary"><i class="fas fa-camera-retro"></i> Posts:</strong> @Model.ProfileInfoViewModel.Posts.Count.ToString()
                        </h5>
                        <h5>
                            <strong class="text-primary"><i class="fas fa-users"></i> Friends:</strong> @Model.ProfileInfoViewModel.Friends.Count(f => f.Status == Friend.eStatus.Accept).ToString()
                        </h5>
                    </div>
                </div>
            </div>
            <div class="col-md-4 col-sm-10">
                <div class="row">
                    @if (Model.ProfileInfoViewModel.UserId.ToString() == CookieClaims.GetCookieID(User))
                    {
                        <div class="col-lg-3 col-md-4 col-sm-3 ActionButtons">
                            <button type="button" class="btn btn-secondary SettingsModalButton" data-toggle="modal" data-target="#AccountSettings"><i class="fas fa-cogs"></i> Settings</button>
                        </div>
                        <div class="col-lg-3 col-md-4 col-sm-3 ActionButtons">
                            <Button type="button" class="btn btn-warning FriendModalButton" data-toggle="modal" data-target="#FriendsPage" value="@Model.ProfileInfoViewModel.UserId"><i class="fas fa-users"></i> Friends</Button>
                        </div>
                    }
                    else
                    {
                        if (Model.ProfileInfoViewModel.Friends.Any(f => f.FriendEntity.UserId.ToString() == CookieClaims.GetCookieID(User)))
                        {
                            if (Model.ProfileInfoViewModel.Friends.Any(f => f.Status == Friend.eStatus.Pending && f.FriendEntity.UserId.ToString() == CookieClaims.GetCookieID(User)))
                            {
                                <div class="col-lg-3 col-md-4 col-sm-3 ActionButtons">
                                    <button type="button" class="btn btn-info"><i class="fas fa-envelope"></i> Pending...</button>
                                </div>
                            }
                            else
                            {
                                <div class="col-lg-5 col-md-8 col-sm-3 ActionButtons">
                                    <button type="button" class="btn btn-outline-success">Friends With @Model.ProfileInfoViewModel.FirstName</button>
                                </div>
                                <div class="col-lg-3 col-md-4 col-sm-3 ActionButtons">
                                    <Button type="button" class="btn btn-warning FriendModalButton" data-toggle="modal" data-target="#FriendsPage" value="@Model.ProfileInfoViewModel.UserId"><i class="fas fa-users"></i> Friends</Button>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="col-lg-3 col-md-4 col-sm-3 ActionButtons">
                                <button type="button" class="btn btn-success FriendAddButton" value="@Model.ProfileInfoViewModel.UserId"><i class="fas fa-plus"></i> Add Friend</button>
                            </div>
                        }
                    }

                </div>
            </div>
        </div>
    </div>
    <div class="User-Content">
        <ul class="nav nav-tabs">
            <li class="nav-item">
                <a class="nav-link active show" data-toggle="tab" href="#Posts"><i class="fas fa-camera-retro"></i> Posts</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" data-toggle="tab" href="#Statistics"><i class="fas fa-clipboard-list"></i> Statistics</a>
            </li>
        </ul>
        <div id="myTabContent" class="tab-content">
            <div class="tab-pane fade active show" id="Posts">
                <div class="row">
                    @foreach (Post post in Model.ProfileInfoViewModel.Posts)
                    {
                        if (Model.ProfileInfoViewModel.UserId.ToString() == CookieClaims.GetCookieID(User))
                        {
                            <div id="PostId:@post.PostID" class="card border-primary mb-3 PreviewPost" style="min-width: 20rem;">
                                <div class="card-header">
                                    <h4 class="PostTitle">@post.Title</h4> <small class="PostDate text-mute">Upload date: @post.DateTime</small>
                                </div>
                                <div class="card-body">
                                    <img class="PreviewPostImage" src="~/images/Uploads/PostImages/@post.PrimaryPhoto"/>
                                </div>
                            </div>
                        }
                        else if (post.PublicPost || (Model.ProfileInfoViewModel.Friends.Any(f => f.FriendEntity.UserId.ToString() == CookieClaims.GetCookieID(User) && f.Status == Friend.eStatus.Accept)))
                        {
                            <div id="PostId:@post.PostID" class="card border-primary mb-3 PreviewPost" style="min-width: 20rem;">
                                <div class="card-header">
                                    <h4 class="PostTitle">@post.Title</h4> <small class="PostDate text-mute">Upload date: @post.DateTime</small>
                                </div>
                                <div class="card-body">
                                    <img class="PreviewPostImage" src="~/images/Uploads/PostImages/@post.PrimaryPhoto"/>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
            <div class="tab-pane fade" id="Statistics">
                <h4>Statics</h4>
            </div>
        </div>
    </div>
</div>

@*Accountsettings Modal*@
@*@Html.Partial("ProfileSettings", Model.ProfileSettingsViewModel)*@

@{
    Html.RenderPartial("ProfileSettings", Model.ProfileSettingsViewModel);
}

@*Friends Modal*@
@Html.Partial("ProfileFriends", Model.ProfileFriendsViewModal)


<script src="~/js/account/profile/profileSettings.js"></script>
<script src="~/js/account/profile/ProfileFriends.js"></script>